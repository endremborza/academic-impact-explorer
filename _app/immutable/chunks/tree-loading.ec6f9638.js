import{D as F,S as G}from"./constants.30a985e8.js";const J={include:[],exclude:[],limit_n:F,show_top:!0,size_base:"volume"};function Q(t,e,n,i,s,c,d){const l=I(e,n,i,(b,y)=>{const u=N(y,c);return K(e,$[u],y,t,c,d,s).specMetric}),p=[{totalNodes:1,totalWeight:e.weight}],_={name:"",weight:e.weight,isSelected:!0,children:{},childrenSumWeight:0,totalOffsetOnLevel:{weight:0,rank:0},totalOffsetAmongSiblings:{weight:0,rank:0},scaleEnds:{min:0,max:1,mid:.5},specMetric:{rawMetric:0,normalizedMetric:0}},g=b=>L(b.path.slice(0,-1),_),C=b=>b.path.slice(0,-1).join("-");for(const[b,y]of l.slice(1).entries()){const u=n[b];let S=0,o=0;const h={},E=[],v=(a,r)=>{const O=g(a),m=g(r);if((O==null?void 0:O.totalOffsetOnLevel.rank)==(m==null?void 0:m.totalOffsetOnLevel.rank)){const w=a.derivedWeight-r.derivedWeight;return w!=0?w:j(a.path)>j(r.path)?-1:1}return((O==null?void 0:O.totalOffsetOnLevel.rank)||0)-((m==null?void 0:m.totalOffsetOnLevel.rank)||0)};for(const a of y){const r=C(a);h[r]=(h[r]||0)+1,M(a,E,v)}for(const a of E){const r=g(a),O=h[C(a)];if((r==null?void 0:r.children)!=null){const m=((r==null?void 0:r.scaleEnds.max)-(r==null?void 0:r.scaleEnds.min))/(O||1),w=j(a.path),D=Object.keys(r.children).length,k=r.scaleEnds.min+(D||0)*m,P=k+m,z=u.size_base=="specialization"?{rawMetric:a.node.weight,normalizedMetric:0}:{rawMetric:0,normalizedMetric:0};r.children[w]={name:A(a.path,s,c),weight:a.derivedWeight,isSelected:T(a.path,i),children:{},childrenSumWeight:0,totalOffsetOnLevel:{weight:S,rank:o},totalOffsetAmongSiblings:{weight:r.childrenSumWeight,rank:D},scaleEnds:{min:k,max:P,mid:(P+k)/2},specMetric:z},r.childrenSumWeight+=a.derivedWeight,S+=a.derivedWeight,o+=1}}p.push({totalWeight:S,totalNodes:o})}return{tree:_,meta:p}}function I(t,e,n,i){var c,d;const s=[[{path:[],node:t,derivedWeight:0}]];e:for(let f=0;f<e.length;f++){const l=e[f];let p=l.limit_n;const _=s[f],g=[],C=new Set,b=l.size_base=="volume"?o=>o.weight:i,y=l.show_top?(o,h)=>o.derivedWeight-h.derivedWeight:(o,h)=>h.derivedWeight-o.derivedWeight,u=(o,h)=>{if(l.exclude.includes(h))return;const E=[...o.path,h],v=o.node.children[h];C.add(E.join("-")),g.push({node:v,path:E,derivedWeight:b(v,E)}),p--},S=_.filter(o=>T(o.path,n));if(S.length==0)break;s.push(g);for(const o of S)for(const h of Object.keys(((c=L(o.path,n))==null?void 0:c.children)||{}))if(u(o,h),p==0)continue e;for(const o of l.include)for(const h of S)if(Object.hasOwn(((d=h.node)==null?void 0:d.children)||{},o)&&!C.has([...h.path,o].join("-"))&&(u(h,o),p==0))continue e;for(const[o,h]of S.entries()){const E=Math.round(p/(S.length-o));if(E==0)continue;const v=[];for(const[a,r]of Object.entries(h.node.children||{})){if(l.exclude.includes(a))continue;const O=[...h.path,a];if(C.has(O.join("-")))continue;const m={node:r,path:O,derivedWeight:b(r,O)};v.length<E?M(m,v,y):y(v[0],m)<0&&(v.shift(),M(m,v,y))}v.map(a=>g.push(a)),p-=v.length}}return s}function X(t,e,n){const i=[],s=Math.max((((t==null?void 0:t.meta)||[]).length||0)-1,1);let c=0;const d=n===void 0?e/s:e/s/2;for(let f=0;f<s;f++){const l=n==f?e/2+d:d;i.push({totalSize:l,topOffset:c}),c+=l}return i}function M(t,e,n){let i=0,s=e.length-1,c,d;for(;i<=s;){if(c=Math.floor((i+s)/2),d=n(e[c],t),d==0)return e.splice(c,0,t);d<0?i=c+1:s=c-1}e.splice(i,0,t)}function L(t,e){let n=e;for(const i of t)if(n=((n==null?void 0:n.children)||{})[i],n===void 0)return n;return n}function T(t,e){return L(t,e)!=null}function R(t){const e=[];for(const[n,i]of Object.entries(t.children||{}))return[n,...R(i)];return e}function A(t,e,n){var c;if(e===void 0)return"Loading...";const i=j(t),s=N(t,n);return(c=e[s][i])==null?void 0:c.name}function N(t,e){return e.bifurcations[t.length-1].attribute_kind}const Y=t=>t.join("x"),Z=t=>t.split("x");function j(t){return t[t.length-1]}const B=["Institution-Country-Global","Concept-Continent-Institution","Institution-Country-Country","Concept-Country-Institution"],$={Institution:{basis:"Continent",hierarchy:"Global"},Concept:{basis:"Global",hierarchy:"Global"},Country:{basis:"Country",hierarchy:"Global"},SubConcept:{basis:"Global",hierarchy:"Concept"},Continent:{basis:"Continent",hierarchy:"Global"}},U={Continent:"continent__id",Country:"country__id"};function K(t,e,n,i,s,c,d){var y;const f=N(n,s),l=L(n,t),p=n[n.length-1];let _=t.weight,g=c[x(f,e.basis,e.hierarchy)];if(e.basis!="Global"&&(g=g[d[s.root_entity_type][i].meta[U[e.basis]||e.basis]]),e.hierarchy!="Global"){for(let u=n.length-2;u>=0;u--)if(e.hierarchy==s.bifurcations[u].attribute_kind){const S=n[u],o=L(n.slice(0,u+1),t);g=g[S],_=o==null?void 0:o.weight;break}}else for(let u=n.length-2;u>0;u--)if(s.root_entity_type==s.bifurcations[u].attribute_kind){_=(y=L(n.slice(0,u+1),t))==null?void 0:y.weight;break}const C=g[p]||0,b=((l==null?void 0:l.weight)||0)/_;return{nodeRate:b,nodeDivisor:_,baselineRate:C,specMetric:b/C}}function x(t,e,n){return`${t}-${e}-${n}`}function H(t){const[e,n,i]=t.split("-");return{target:e,basis:n,hierarchy:i}}function W(t,e){return fetch(`${G}/${t}.json.gz`).then(n=>n.json().then(i=>e(i)))}function q(){const t=W("attribute-statics",i=>Object.fromEntries(Object.entries(i).map(([s,c])=>[s,Object.fromEntries(Object.entries(c).map(([d,f])=>{let l;try{l=JSON.parse(f.meta)}catch{l={}}return[d,{...f,meta:l}]}))]))),e=W("qc-specs",i=>i),n=W("available-rca-baselines",i=>{const s=[];for(const[c,d,f]of i.baselines){const l=x(c,d,f);B.includes(l)||s.push(W(`rca-baselines/${l}`,p=>[l,p]))}return Promise.all(s).then(Object.fromEntries)});return Promise.all([t,e,n])}export{J as D,X as a,R as b,N as c,Q as d,K as e,$ as f,L as g,W as h,A as i,q as m,Z as p,H as s,Y as t};
